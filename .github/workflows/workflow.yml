name: Tests & Deploy

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0.21
        env:
          MYSQL_DATABASE: posts-test
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping"

    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
        with:
          php-version: '8.1'

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Copy .env.ci
        run: |
          cd api
          cp .env.ci .env

      - name: Install Composer Dependencies
        run: |
          cd api
          composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Generate App Key
        run: |
          cd api
          php artisan key:generate

      - name: Fix Directory Permissions
        run: |
          cd api
          chmod -R 777 storage bootstrap/cache

      - name: Run PHPStan
        run: |
          cd api
          ./vendor/bin/phpstan analyse --memory-limit=1G

#      - name: Run PHPInsights
#        run: |
#          cd api
#          php artisan insights --no-interaction \
#            --min-quality=90 --min-complexity=90 \
#            --min-architecture=90 --min-style=90 \
#            --ansi --format=github-action

      - name: Run Laravel Tests
        run: |
          cd api
          php artisan test

      - name: Deploy via SSH
        run: |
          echo "${{ secrets.SSH_KEY }}" > ./id_rsa
          chmod 600 ./id_rsa
          ssh -tt -o StrictHostKeyChecking=no -i ./id_rsa ${{ secrets.SSH_CONNECTION_TESTING }} \
            "bash /var/www/html/posts/deployment/bin/deploy.sh ${{ secrets.MYSQL_PASSWORD }}"

      - name: Set up .env for Backblaze bucket
          run: |
            echo "FILESYSTEM_DISK=s3" >> .env
            echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
            echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
            echo "AWS_DEFAULT_REGION=${{ secrets.AWS_DEFAULT_REGION }}" >> .env
            echo "AWS_BUCKET=${{ secrets.AWS_BUCKET }}" >> .env
            echo "AWS_ENDPOINT=${{ secrets.AWS_ENDPOINT }}" >> .env
            echo "AWS_USE_PATH_STYLE_ENDPOINT=${{ secrets.AWS_USE_PATH_STYLE_ENDPOINT }}" >> .env